package err

import (
	"fmt"
)

var (
	// ErrNilPointer defines a nil pointer argument error.
	ErrNilPointer = fmt.Errorf("invalid nil pointer")

	// ErrConversion defines a type conversion error.
	ErrConversion = fmt.Errorf("invalid type conversion")

	// ErrServiceNotFound defines a service not found on the container.
	ErrServiceNotFound = fmt.Errorf("service not found")

	// ErrConfigSourceNotFound defines a source config source not found error.
	ErrConfigSourceNotFound = fmt.Errorf("config source not found")

	// ErrDuplicateConfigSource defines a duplicate config source
	// registration attempt.
	ErrDuplicateConfigSource = fmt.Errorf("config source already registered")

	// ErrConfigPathNotFound defines a path in Partial not found error.
	ErrConfigPathNotFound = fmt.Errorf("config path not found")

	// ErrConfigRestPathNotFound defines a config path not found error.
	ErrConfigRestPathNotFound = fmt.Errorf("rest path not found")

	// ErrInvalidConfigDecoderFormat defines an error that signal an
	// unexpected/unknown config source decoder format.
	ErrInvalidConfigDecoderFormat = fmt.Errorf("invalid config decoder format")

	// ErrInvalidConfigSourceType defines an error that signal an
	// unexpected/unknown config source type.
	ErrInvalidConfigSourceType = fmt.Errorf("invalid config source type")

	// ErrInvalidConfigSourcePartial defines an error that signal an
	// invalid source configuration Partial.
	ErrInvalidConfigSourcePartial = fmt.Errorf("invalid config source config")

	// ErrInvalidLogFormat defines an error that signal an invalid
	// log format.
	ErrInvalidLogFormat = fmt.Errorf("invalid output format")

	// ErrInvalidLogLevel defines an error that signal an invalid
	// log level.
	ErrInvalidLogLevel = fmt.Errorf("invalid logger level")

	// ErrDuplicateLogStream defines an error that signal that the
	// requested log stream to be registered have an id of an already
	// registered log stream.
	ErrDuplicateLogStream = fmt.Errorf("stream already registered")

	// ErrInvalidLogStreamType defines an error that signal that the
	// requested stream was unable to be generated by the requested type.
	ErrInvalidLogStreamType = fmt.Errorf("invalid stream type")

	// ErrInvalidLogStreamConfig defines an error that signal that the
	// given log stream configuration was unable to be parsed correctly
	// enabling the log stream generation.
	ErrInvalidLogStreamConfig = fmt.Errorf("invalid log stream config")

	// ErrDatabaseConfigNotFound defines an error that signal that the
	// configuration to the requested database connection was not found.
	ErrDatabaseConfigNotFound = fmt.Errorf("database config not found")

	// ErrUnknownDatabaseDialect defines an error that signal that the
	// requested database connection configured dialect is unknown.
	ErrUnknownDatabaseDialect = fmt.Errorf("unknown database dialect")
)
